<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

    <context:component-scan base-package="com.joybike.server.api">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
    </context:component-scan>
    <!-- 使用Annotation(注解)自动注册Bean(自注入) ,并检查@Required,@Autowired的属性已被注入 -->
    <mvc:annotation-driven/>



    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--开启注解配置-->
    <context:annotation-config />

    <!--开启AOP，使用aspectj-->
    <aop:aspectj-autoproxy/>

    <task:annotation-driven /> <!-- 定时器开关-->
    <bean id="myTaskXml" class="com.joybike.server.api.util.MyTaskXml"></bean>

    <task:scheduled-tasks>
        <!--
            这里表示的是每隔五秒执行一次
        -->
        <task:scheduled ref="myTaskXml" method="show" cron="*/5 * * * * ?" />
        <task:scheduled ref="myTaskXml" method="print" cron="*/10 * * * * ?"/>
    </task:scheduled-tasks>

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com.joybike.server.api.util" />


    <!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->
    <!--<aop:aspectj-autoproxy  proxy-target-class="true"  />-->

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">-->
    <!--<property name="viewClass"-->
    <!--value="org.springframework.web.servlet.view.JstlView" />-->
    <!--<property name="prefix" value="/WEB-INF/views" />-->
    <!--<property name="suffix" value=".jsp" />-->
    <!--</bean>-->

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>



    <!--采用@Transactional注解方式使用事务  -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />


    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1"/>
        <!-- 连接池的最大值 -->
        <property name="maxTotal" value="1000"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="2"/>
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请一些连接，以避免洪峰来时再申请而造成的性能开销 -->
        <property name="minIdle" value="2"/>
    </bean>
    <bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"></constructor-arg>
    </bean>

    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; 如果不配置或/**,将拦截所有的Controller &ndash;&gt;-->
            <!--<mvc:mapping path="/**" />-->
            <!--&lt;!&ndash; 页面权限通用处理   &ndash;&gt;-->
            <!--<bean class="com.joybike.server.api.Infrustructure.MyHandlerInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="viewClass"-->
                  <!--value="org.springframework.web.servlet.view.JstlView" />-->
        <!--<property name="prefix" value="/WEB-INF/view/" />-->
    <!--</bean>-->

    <!--<mvc:resources mapping="/joybikeH5/**" location="/joybikeH5/" />-->

    <!--使用方式，在待引入使用的地方，添加如下：
  @Value("#{thirdparty}")
  private Properties thirdpartyProperty;
  -->
    <util:properties id="thirdparty" location="classpath:thirdparty.properties"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为4MB -->
        <property name="maxUploadSize">
            <value>4194304</value>
        </property>
    </bean>
</beans>